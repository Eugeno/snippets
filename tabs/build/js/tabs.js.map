{"version":3,"sources":["tabs.js"],"names":["Tabs","options","settings","Object","assign","init","tabsContainers","document","querySelectorAll","forEach","tabsContainer","i","tabs","tabsContent","dataset","tab","querySelector","concat","toConsumableArray","tabsMap","Map","j","tabContent","set","addEventListener","event","target","hasAttribute","parentNode","switch","_this","activeClass","_step","Symbol","iterator","_iteratorNormalCompletion","_iterator","next","done","_ref2","classList","remove","this","hiddenClass","add","get"],"mappings":"kjCAAMA,sBACSC,kBAMNC,SAAWC,OAAOC,uBAJR,yBACA,cAG6BH,QAEvCI,8DAICC,OAAAA,EAAqBC,SAASC,iBAAiB,iBACtCC,QAAQ,SAACC,EAAeC,OAC/BC,KAAAA,OAAAA,EAAWF,EAAcF,iBAAiB,gBAC1CK,EAAcH,EAAcI,QAAQC,IACxCR,SAASS,cAAT,sBAA6CN,EAAcI,QAAQC,IAAnE,QACAE,OAAAC,EAAIX,SAASC,iBAAiB,yBAAwBG,GAElDQ,EAAU,IAAIC,MACfX,QAAQ,SAACM,EAAKM,OACXC,EAAaP,EAAID,QAAQC,IAC7BF,EAAYG,cAAZ,aAAuCD,EAAID,QAAQC,IAAnD,QACAE,OAAAC,EAAIL,EAAYL,iBAAiB,gBAAea,KAC1CE,IAAIR,EAAKO,OAGLE,iBAAiB,QAAS,SAACC,WACnCC,EAASD,EAAMC,QACXA,EAAOC,aAAa,eACjBD,EAAOE,aAGbC,OAAOH,EAAQP,KAGjBT,EAAcM,cAAd,cAA0Cc,EAAK5B,SAAS6B,gBACtDF,OAAOjB,EAAK,GAAIO,oCAKnBO,EAAQP,sCACda,IAA+Bb,EAA/Bc,OAAAC,cAAAC,GAAAH,EAAAI,EAAAC,QAAAC,MAAAH,GAAA,EAAwC,wBAA9BpB,EAA8BwB,EAAA,GAAzB1B,EAAyB0B,EAAA,KAClCC,UAAUC,OAAOC,KAAKxC,SAASyC,eACvBH,UAAUI,IAAIF,KAAKxC,SAASyC,6FAGnCH,UAAUI,IAAIF,KAAKxC,SAAS6B,eAC3Bc,IAAInB,GAAQc,UAAUC,OAAOC,KAAKxC,SAASyC,mBAlDjD3C","file":"tabs.js","sourcesContent":["class Tabs {\r\n  constructor (options) {\r\n    const defaults = {\r\n      activeClass: '_is-active',\r\n      hiddenClass: '_is-hidden',\r\n    }\r\n\r\n    this.settings = Object.assign({}, defaults, options)\r\n\r\n    this.init()\r\n  }\r\n\r\n  init () {\r\n    const tabsContainers = [...document.querySelectorAll('[data-tabs]')]\r\n    tabsContainers.forEach((tabsContainer, i) => {\r\n      const tabs = [...tabsContainer.querySelectorAll('[data-tab]')]\r\n      const tabsContent = tabsContainer.dataset.tab ?\r\n        document.querySelector(`[data-tabs-content=${tabsContainer.dataset.tab}]`) :\r\n        [...document.querySelectorAll('[data-tabs-content]')][i]\r\n\r\n      const tabsMap = new Map()\r\n      tabs.forEach((tab, j) => {\r\n        const tabContent = tab.dataset.tab ?\r\n          tabsContent.querySelector(`[data-tab=${tab.dataset.tab}]`) :\r\n          [...tabsContent.querySelectorAll('[data-tab]')][j]\r\n        tabsMap.set(tab, tabContent)\r\n      })\r\n\r\n      tabsContainer.addEventListener('click', (event) => {\r\n        let target = event.target\r\n        while (!target.hasAttribute('data-tab')) {\r\n          target = target.parentNode\r\n        }\r\n\r\n        this.switch(target, tabsMap)\r\n      })\r\n\r\n      if (!tabsContainer.querySelector(`[data-tab].${this.settings.activeClass}`)) {\r\n        this.switch(tabs[0], tabsMap)\r\n      }\r\n    })\r\n  }\r\n\r\n  switch (target, tabsMap) {\r\n    for (let [tab, tabsContent] of tabsMap) {\r\n      tab.classList.remove(this.settings.hiddenClass)\r\n      tabsContent.classList.add(this.settings.hiddenClass)\r\n    }\r\n\r\n    target.classList.add(this.settings.activeClass)\r\n    tabsMap.get(target).classList.remove(this.settings.hiddenClass)\r\n  }\r\n}\r\n\r\nexport default Tabs\r\n"]}