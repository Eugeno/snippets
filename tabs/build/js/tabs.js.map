{"version":3,"sources":["src/js/tabs.js"],"names":["Tabs","options","classCallCheck","this","settings","Object","assign","activeClass","hiddenClass","init","_this","document","querySelectorAll","forEach","tabsContainer","i","tabs","tabsContent","dataset","tab","querySelector","tabsMap","Map","j","tabContent","set","addEventListener","evt","target","hasAttribute","parentNode","switch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref","value","_ref2","slicedToArray","classList","remove","add","err","return","get"],"mappings":"y7BAAMA,WACJ,SAAAA,EAAaC,GAASC,EAAAC,KAAAH,GAMpBG,KAAKC,SAAWC,OAAOC,WAJrBC,YAAa,aACbC,YAAa,cAG6BP,GAE5CE,KAAKM,gDAGC,IAAAC,EAAAP,KACiBQ,SAASC,iBAAiB,eAClCC,QAAQ,SAACC,EAAeC,GACrC,IAAMC,EAAOF,EAAcF,iBAAiB,cACtCK,EAAcH,EAAcI,QAAQC,IACxCR,SAASS,cAAT,sBAA6CN,EAAcI,QAAQC,IAAnE,KACAR,SAASC,iBAAiB,uBAAuBG,GAE7CM,EAAU,IAAIC,IACpBN,EAAKH,QAAQ,SAACM,EAAKI,GACjB,IAAMC,EAAaL,EAAID,QAAQC,IAC7BF,EAAYG,cAAZ,aAAuCD,EAAID,QAAQC,IAAnD,KACAF,EAAYL,iBAAiB,cAAcW,GAC7CF,EAAQI,IAAIN,EAAKK,KAGnBV,EAAcY,iBAAiB,QAAS,SAACC,GACvC,IAAIC,EAASD,EAAIC,OACjB,GAAIA,IAAWd,EAAe,CAC5B,MAAQc,EAAOC,aAAa,aAC1BD,EAASA,EAAOE,WAGlBpB,EAAKqB,OAAOH,EAAQP,MAInBP,EAAcM,cAAd,cAA0CV,EAAKN,SAASG,cAC3DG,EAAKqB,OAAOf,EAAK,GAAIK,oCAKnBO,EAAQP,GAAS,IAAAW,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACvB,IAAA,IAAAC,EAAAC,EAA+BhB,EAA/BiB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAwC,CAAA,IAAAU,EAAAN,EAAAO,MAAAC,EAAAC,EAAAH,EAAA,GAA9BvB,EAA8ByB,EAAA,GAAzB3B,EAAyB2B,EAAA,GACtCzB,EAAI2B,UAAUC,OAAO5C,KAAKC,SAASG,aACnCU,EAAY6B,UAAUE,IAAI7C,KAAKC,SAASI,cAHnB,MAAAyC,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,QAAA,KAAAjB,GAAAK,EAAAa,QAAAb,EAAAa,SAAA,QAAA,GAAAjB,EAAA,MAAAC,GAMvBN,EAAOkB,UAAUE,IAAI7C,KAAKC,SAASG,aACnCc,EAAQ8B,IAAIvB,GAAQkB,UAAUC,OAAO5C,KAAKC,SAASI,mBApDjDR","file":"tabs.js","sourcesContent":["class Tabs {\r\n  constructor (options) {\r\n    const defaults = {\r\n      activeClass: '_is-active',\r\n      hiddenClass: '_is-hidden',\r\n    }\r\n\r\n    this.settings = Object.assign({}, defaults, options)\r\n\r\n    this.init()\r\n  }\r\n\r\n  init () {\r\n    const tabsContainers = document.querySelectorAll('[data-tabs]')\r\n    tabsContainers.forEach((tabsContainer, i) => {\r\n      const tabs = tabsContainer.querySelectorAll('[data-tab]')\r\n      const tabsContent = tabsContainer.dataset.tab ?\r\n        document.querySelector(`[data-tabs-content=${tabsContainer.dataset.tab}]`) :\r\n        document.querySelectorAll('[data-tabs-content]')[i]\r\n\r\n      const tabsMap = new Map()\r\n      tabs.forEach((tab, j) => {\r\n        const tabContent = tab.dataset.tab ?\r\n          tabsContent.querySelector(`[data-tab=${tab.dataset.tab}]`) :\r\n          tabsContent.querySelectorAll('[data-tab]')[j]\r\n        tabsMap.set(tab, tabContent)\r\n      })\r\n\r\n      tabsContainer.addEventListener('click', (evt) => {\r\n        let target = evt.target\r\n        if (target !== tabsContainer) {\r\n          while (!target.hasAttribute('data-tab')) {\r\n            target = target.parentNode\r\n          }\r\n\r\n          this.switch(target, tabsMap)\r\n        }\r\n      })\r\n\r\n      if (!tabsContainer.querySelector(`[data-tab].${this.settings.activeClass}`)) {\r\n        this.switch(tabs[0], tabsMap)\r\n      }\r\n    })\r\n  }\r\n\r\n  switch (target, tabsMap) {\r\n    for (let [tab, tabsContent] of tabsMap) {\r\n      tab.classList.remove(this.settings.activeClass)\r\n      tabsContent.classList.add(this.settings.hiddenClass)\r\n    }\r\n\r\n    target.classList.add(this.settings.activeClass)\r\n    tabsMap.get(target).classList.remove(this.settings.hiddenClass)\r\n  }\r\n}\r\n\r\nexport default Tabs\r\n"]}